from django.test import TestCase
from django.urls import reverse  # To generate URLs from view names

from .models import Product
from .views import product_list

class ProductListViewTest(TestCase):
    def setUp(self):
        self.available_product = Product.objects.create(
            name="Available Product",
            price=10.99,
            stock=5,  # Assuming a `stock` field for availability
        )
        self.unavailable_product = Product.objects.create(
            name="Unavailable Product",
            price=12.50,
            stock=0,  # Assuming 0 stock signifies unavailability
        )

    def test_can_list_available_products(self):
        url = reverse("product_list")  # Get the URL for the product list view

        # Simulate a GET request without any filter (default to available)
        response = self.client.get(url)

        self.assertEqual(response.status_code, 200)  # Expect successful response

        # Verify only the available product is in the context
        self.assertEqual(len(response.context['object_list']), 1)
        self.assertEqual(response.context['object_list'][0], self.available_product)

        # Optionally, check if the available product name appears in the response content
        self.assertContains(response.content, b"Available Product")
        self.assertNotContains(response.content, b"Unavailable Product")  # Verify absence
